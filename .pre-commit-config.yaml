# Pre-commit hooks configuration for MCP Tools
# Run 'pre-commit install' to set up the git hook scripts

repos:
  # Code formatting and linting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
      - id: pretty-format-json
        args: ['--autofix', '--indent=2']

  # TypeScript and JavaScript formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: '\.(ts|tsx|js|jsx|json|md|yml|yaml)$'
        exclude: 'package-lock\.json|\.next|dist|build|node_modules'

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock\.json

  # Local hooks for custom quality checks
  - repo: local
    hooks:
      # TypeScript type checking
      - id: typescript-check
        name: TypeScript Type Check
        entry: npm run typecheck
        language: system
        files: '\.(ts|tsx)$'
        pass_filenames: false

      # ESLint for TypeScript/JavaScript
      - id: eslint
        name: ESLint
        entry: npx eslint --fix
        language: system
        files: '\.(ts|tsx|js|jsx)$'
        exclude: 'node_modules|dist|build|\.next'

      # Technical debt scanner
      - id: technical-debt-check
        name: Technical Debt Check
        entry: ./.pre-commit-scripts/check-technical-debt.js
        language: node
        files: '\.(ts|tsx|js|jsx)$'
        exclude: 'node_modules|dist|build|\.next'

      # Security vulnerability check
      - id: security-check
        name: Security Vulnerability Check
        entry: ./.pre-commit-scripts/check-security.js
        language: node
        pass_filenames: false

      # Performance budget check (for built files)
      - id: performance-check
        name: Performance Budget Check
        entry: ./.pre-commit-scripts/check-performance.js
        language: node
        files: 'package\.json|tsup\.config\.|webpack\.config\.|vite\.config\.'
        pass_filenames: false

      # Code complexity check
      - id: complexity-check
        name: Code Complexity Check
        entry: ./.pre-commit-scripts/check-complexity.js
        language: node
        files: '\.(ts|tsx|js|jsx)$'
        exclude: 'node_modules|dist|build|\.next|\.test\.|\.spec\.'

      # Dependency license check
      - id: license-check
        name: License Compatibility Check
        entry: ./.pre-commit-scripts/check-licenses.js
        language: node
        files: 'package\.json|package-lock\.json'
        pass_filenames: false

      # Documentation check
      - id: docs-check
        name: Documentation Check
        entry: ./.pre-commit-scripts/check-docs.js
        language: node
        files: '\.(ts|tsx|js|jsx)$'
        exclude: 'node_modules|dist|build|\.next|\.test\.|\.spec\.'

      # Database migration check
      - id: migration-check
        name: Database Migration Check
        entry: ./.pre-commit-scripts/check-migrations.js
        language: node
        files: 'database/|migrations/|schema\.'

# Configuration for specific hooks
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0