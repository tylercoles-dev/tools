name: Playwright Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/playwright.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/playwright.yml'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mcp_tools_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            web/package-lock.json
            gateway/package-lock.json
            core/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps

      - name: Build core packages
        run: |
          cd core
          npm ci
          npm run build

      - name: Build gateway
        run: |
          cd gateway
          npm ci
          npm run build

      - name: Build web application
        run: |
          cd web
          npm run build

      - name: Setup test database
        run: |
          cd gateway
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mcp_tools_test
          NODE_ENV: test

      - name: Run Playwright tests
        run: |
          cd web
          npm run test:ci
        env:
          BASE_URL: http://localhost:3000
          API_URL: http://localhost:3001
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mcp_tools_test
          NODE_ENV: test
          CI: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.node-version }}
          path: web/playwright-report/
          retention-days: 30

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: web/test-results/
          retention-days: 30

  test-specific-suites:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-suite: [smoke, e2e, regression, integration]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps chromium

      - name: Build dependencies
        run: |
          cd core && npm ci && npm run build
          cd ../gateway && npm ci && npm run build
          cd ../web && npm run build

      - name: Run ${{ matrix.test-suite }} tests
        run: |
          cd web
          npm run test:${{ matrix.test-suite }} -- --reporter=junit,html
        env:
          BASE_URL: http://localhost:3000
          NODE_ENV: test
          CI: true

      - name: Upload ${{ matrix.test-suite }} results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.test-suite }}-results
          path: |
            web/test-results/
            web/playwright-report/
          retention-days: 14

  visual-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps

      - name: Build application
        run: |
          cd core && npm ci && npm run build
          cd ../gateway && npm ci && npm run build
          cd ../web && npm run build

      - name: Run visual tests
        run: |
          cd web
          npm run test:visual
        env:
          BASE_URL: http://localhost:3000
          NODE_ENV: test
          CI: true
          VISUAL_TESTS: true

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-results
          path: |
            web/test-results/
            web/tests/fixtures/screenshots/
          retention-days: 30

  accessibility-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps chromium

      - name: Build application
        run: |
          cd core && npm ci && npm run build
          cd ../gateway && npm ci && npm run build
          cd ../web && npm run build

      - name: Run accessibility tests
        run: |
          cd web
          npm run test:accessibility
        env:
          BASE_URL: http://localhost:3000
          NODE_ENV: test
          CI: true
          A11Y_TESTS: true

      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-results
          path: web/test-results/
          retention-days: 14

  performance-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps chromium

      - name: Build application
        run: |
          cd core && npm ci && npm run build
          cd ../gateway && npm ci && npm run build
          cd ../web && npm run build

      - name: Run performance tests
        run: |
          cd web
          npx playwright test tests/performance --reporter=html
        env:
          BASE_URL: http://localhost:3000
          NODE_ENV: test
          CI: true
          PERF_TESTS: true

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            web/test-results/
            web/playwright-report/
          retention-days: 14